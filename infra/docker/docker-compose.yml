services:
  postgres:
    image: postgres:14
    container_name: nimbuslance_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nimbuslance
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ../../
      dockerfile: apps/api/Dockerfile
    container_name: nimbuslance_api
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ../../apps/api/.env
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/nimbuslance
    ports:
      - "3000:3000"
    working_dir: /app/apps/api
    command: pnpm run start:dev
    volumes:
      - ../../apps/api/src:/app/apps/api/src
      - ../../apps/api/test:/app/apps/api/test
      - ../../packages:/app/packages

  web:
    build:
      context: ../../
      dockerfile: apps/web/Dockerfile
    container_name: nimbuslance_web
    restart: unless-stopped
    depends_on:
      - api
    env_file:
      - ../../apps/web/.env
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3000/
      NODE_ENV: development
    ports:
      - "3001:3000"
    working_dir: /app/apps/web
    command: pnpm run dev
    volumes:
      - ../../apps/web/app:/app/apps/web/app
      - ../../apps/web/public:/app/apps/web/public
      - ../../apps/web/next.config.ts:/app/apps/web/next.config.ts
      - ../../apps/web/eslint.config.mjs:/app/apps/web/eslint.config.mjs
      - ../../apps/web/tsconfig.json:/app/apps/web/tsconfig.json
      - ../../apps/web/postcss.config.mjs:/app/apps/web/postcss.config.mjs
      - ../../packages:/app/packages

volumes:
  postgres_data:




